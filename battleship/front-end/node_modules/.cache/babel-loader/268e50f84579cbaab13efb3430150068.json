{"ast":null,"code":"/**\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n \r\nexport default function Create() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n });\r\n const navigate = useNavigate();\r\n \r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n \r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n \r\n   // When a post request is sent to the create url, we'll add a new record to the database.\r\n   const newPerson = { ...form };\r\n \r\n   await fetch(\"http://localhost:5000/record/add\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newPerson),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n \r\n   setForm({ name: \"\", position: \"\", level: \"\" });\r\n   navigate(\"/\");\r\n }\r\n \r\n // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div>\r\n     <h3>Create New Record</h3>\r\n     <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"name\">Name</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"name\"\r\n           value={form.name}\r\n           onChange={(e) => updateForm({ name: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">Position</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"position\"\r\n           value={form.position}\r\n           onChange={(e) => updateForm({ position: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionIntern\"\r\n             value=\"Intern\"\r\n             checked={form.level === \"Intern\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionJunior\"\r\n             value=\"Junior\"\r\n             checked={form.level === \"Junior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionSenior\"\r\n             value=\"Senior\"\r\n             checked={form.level === \"Senior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\r\n         </div>\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Create person\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n\r\n// This function will handle the submission.\r\nasync function onSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n  \r\n    await fetch(\"http://localhost:5000/record/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newPerson),\r\n    })\r\n    .catch(error => {\r\n      window.alert(error);\r\n      return;\r\n    });\r\n  \r\n    setForm({ name: \"\", position: \"\", level: \"\" });\r\n    navigate(\"/\");\r\n  }\r\n  */","map":{"version":3,"names":[],"sources":["D:/codes/Battleship/battleship/src/components/create.js"],"sourcesContent":["/**\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n \r\nexport default function Create() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n });\r\n const navigate = useNavigate();\r\n \r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n \r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n \r\n   // When a post request is sent to the create url, we'll add a new record to the database.\r\n   const newPerson = { ...form };\r\n \r\n   await fetch(\"http://localhost:5000/record/add\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newPerson),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n \r\n   setForm({ name: \"\", position: \"\", level: \"\" });\r\n   navigate(\"/\");\r\n }\r\n \r\n // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div>\r\n     <h3>Create New Record</h3>\r\n     <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"name\">Name</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"name\"\r\n           value={form.name}\r\n           onChange={(e) => updateForm({ name: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">Position</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"position\"\r\n           value={form.position}\r\n           onChange={(e) => updateForm({ position: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionIntern\"\r\n             value=\"Intern\"\r\n             checked={form.level === \"Intern\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionJunior\"\r\n             value=\"Junior\"\r\n             checked={form.level === \"Junior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionSenior\"\r\n             value=\"Senior\"\r\n             checked={form.level === \"Senior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\r\n         </div>\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Create person\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n\r\n// This function will handle the submission.\r\nasync function onSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n  \r\n    await fetch(\"http://localhost:5000/record/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newPerson),\r\n    })\r\n    .catch(error => {\r\n      window.alert(error);\r\n      return;\r\n    });\r\n  \r\n    setForm({ name: \"\", position: \"\", level: \"\" });\r\n    navigate(\"/\");\r\n  }\r\n  */"],"mappings},"metadata":{},"sourceType":"module"}